{"ast":null,"code":"import fs from 'node:fs';\nimport path from 'node:path';\nimport express from 'express';\nimport multer from 'multer';\nimport { google } from 'googleapis';\nexport default function UploadImage() {\n  const app = express();\n  const PORT = 5000;\n\n  // Service Account JSON betÃ¶ltÃ©se\n  const auth = new google.auth.GoogleAuth({\n    keyFile: \"./bookieimage.json\",\n    // A JSON fÃ¡jl neve\n    scopes: [\"https://www.googleapis.com/auth/drive.file\"]\n  });\n\n  // Google Drive API inicializÃ¡lÃ¡sa\n  const drive = google.drive({\n    version: \"v3\",\n    auth\n  });\n\n  // Multer beÃ¡llÃ­tÃ¡sa (fÃ¡jlfeltÃ¶ltÃ©s)\n  const upload = multer({\n    dest: \"uploads/\"\n  });\n\n  // ðŸ“Œ FÃ¡jl feltÃ¶ltÃ©se a Drive-ra\n  app.post(\"/upload\", upload.single(\"file\"), async (req, res) => {\n    try {\n      const fileMetadata = {\n        name: req.file.originalname,\n        parents: [\"1rTc9ThTwwMPcwmwitlLAul4xT-g_3ebb\"] // Itt a Drive mappa ID-jÃ¡t add meg!\n      };\n      const media = {\n        mimeType: req.file.mimetype,\n        body: fs.createReadStream(req.file.path)\n      };\n      const file = await drive.files.create({\n        resource: fileMetadata,\n        media: media,\n        fields: \"id\"\n      });\n\n      // TÃ¶rÃ¶ljÃ¼k a feltÃ¶ltÃ¶tt fÃ¡jlt a szerverrÅ‘l\n      fs.unlinkSync(req.file.path);\n      res.status(200).json({\n        fileId: file.data.id,\n        link: `https://drive.google.com/uc?id=${file.data.id}`\n      });\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({\n        error: \"FeltÃ¶ltÃ©si hiba\"\n      });\n    }\n  });\n\n  // Szerver indÃ­tÃ¡sa\n  app.listen(PORT, () => console.log(`âœ… Szerver fut a ${PORT} porton`));\n}\n_c = UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["fs","path","express","multer","google","UploadImage","app","PORT","auth","GoogleAuth","keyFile","scopes","drive","version","upload","dest","post","single","req","res","fileMetadata","name","file","originalname","parents","media","mimeType","mimetype","body","createReadStream","files","create","resource","fields","unlinkSync","status","json","fileId","data","id","link","error","console","listen","log","_c","$RefreshReg$"],"sources":["F:/NagyProjekt/bookie/src/components/assets/scripts/uploadimage.js"],"sourcesContent":["import fs from 'node:fs';\r\nimport path from 'node:path';\r\nimport express from 'express';\r\nimport multer from 'multer';\r\nimport { google } from 'googleapis';\r\n\r\nexport default function UploadImage(){\r\n    \r\nconst app = express();\r\nconst PORT = 5000;\r\n\r\n// Service Account JSON betÃ¶ltÃ©se\r\nconst auth = new google.auth.GoogleAuth({\r\n    keyFile: \"./bookieimage.json\", // A JSON fÃ¡jl neve\r\n    scopes: [\"https://www.googleapis.com/auth/drive.file\"],\r\n});\r\n\r\n// Google Drive API inicializÃ¡lÃ¡sa\r\nconst drive = google.drive({ version: \"v3\", auth });\r\n\r\n// Multer beÃ¡llÃ­tÃ¡sa (fÃ¡jlfeltÃ¶ltÃ©s)\r\nconst upload = multer({ dest: \"uploads/\" });\r\n\r\n// ðŸ“Œ FÃ¡jl feltÃ¶ltÃ©se a Drive-ra\r\napp.post(\"/upload\", upload.single(\"file\"), async (req, res) => {\r\n    try {\r\n        const fileMetadata = {\r\n            name: req.file.originalname,\r\n            parents: [\"1rTc9ThTwwMPcwmwitlLAul4xT-g_3ebb\"], // Itt a Drive mappa ID-jÃ¡t add meg!\r\n        };\r\n\r\n        const media = {\r\n            mimeType: req.file.mimetype,\r\n            body: fs.createReadStream(req.file.path),\r\n        };\r\n\r\n        const file = await drive.files.create({\r\n            resource: fileMetadata,\r\n            media: media,\r\n            fields: \"id\",\r\n        });\r\n\r\n        // TÃ¶rÃ¶ljÃ¼k a feltÃ¶ltÃ¶tt fÃ¡jlt a szerverrÅ‘l\r\n        fs.unlinkSync(req.file.path);\r\n\r\n        res.status(200).json({ fileId: file.data.id, link: `https://drive.google.com/uc?id=${file.data.id}` });\r\n    } catch (error) {\r\n        console.error(error)\r\n        res.status(500).json({ error: \"FeltÃ¶ltÃ©si hiba\" })\r\n    }\r\n});\r\n\r\n// Szerver indÃ­tÃ¡sa\r\napp.listen(PORT, () => console.log(`âœ… Szerver fut a ${PORT} porton`));\r\n}"],"mappings":"AAAA,OAAOA,EAAE,MAAM,SAAS;AACxB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,MAAM,QAAQ,YAAY;AAEnC,eAAe,SAASC,WAAWA,CAAA,EAAE;EAErC,MAAMC,GAAG,GAAGJ,OAAO,CAAC,CAAC;EACrB,MAAMK,IAAI,GAAG,IAAI;;EAEjB;EACA,MAAMC,IAAI,GAAG,IAAIJ,MAAM,CAACI,IAAI,CAACC,UAAU,CAAC;IACpCC,OAAO,EAAE,oBAAoB;IAAE;IAC/BC,MAAM,EAAE,CAAC,4CAA4C;EACzD,CAAC,CAAC;;EAEF;EACA,MAAMC,KAAK,GAAGR,MAAM,CAACQ,KAAK,CAAC;IAAEC,OAAO,EAAE,IAAI;IAAEL;EAAK,CAAC,CAAC;;EAEnD;EACA,MAAMM,MAAM,GAAGX,MAAM,CAAC;IAAEY,IAAI,EAAE;EAAW,CAAC,CAAC;;EAE3C;EACAT,GAAG,CAACU,IAAI,CAAC,SAAS,EAAEF,MAAM,CAACG,MAAM,CAAC,MAAM,CAAC,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;IAC3D,IAAI;MACA,MAAMC,YAAY,GAAG;QACjBC,IAAI,EAAEH,GAAG,CAACI,IAAI,CAACC,YAAY;QAC3BC,OAAO,EAAE,CAAC,mCAAmC,CAAC,CAAE;MACpD,CAAC;MAED,MAAMC,KAAK,GAAG;QACVC,QAAQ,EAAER,GAAG,CAACI,IAAI,CAACK,QAAQ;QAC3BC,IAAI,EAAE5B,EAAE,CAAC6B,gBAAgB,CAACX,GAAG,CAACI,IAAI,CAACrB,IAAI;MAC3C,CAAC;MAED,MAAMqB,IAAI,GAAG,MAAMV,KAAK,CAACkB,KAAK,CAACC,MAAM,CAAC;QAClCC,QAAQ,EAAEZ,YAAY;QACtBK,KAAK,EAAEA,KAAK;QACZQ,MAAM,EAAE;MACZ,CAAC,CAAC;;MAEF;MACAjC,EAAE,CAACkC,UAAU,CAAChB,GAAG,CAACI,IAAI,CAACrB,IAAI,CAAC;MAE5BkB,GAAG,CAACgB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEf,IAAI,CAACgB,IAAI,CAACC,EAAE;QAAEC,IAAI,EAAE,kCAAkClB,IAAI,CAACgB,IAAI,CAACC,EAAE;MAAG,CAAC,CAAC;IAC1G,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBtB,GAAG,CAACgB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEK,KAAK,EAAE;MAAkB,CAAC,CAAC;IACtD;EACJ,CAAC,CAAC;;EAEF;EACAnC,GAAG,CAACqC,MAAM,CAACpC,IAAI,EAAE,MAAMmC,OAAO,CAACE,GAAG,CAAC,mBAAmBrC,IAAI,SAAS,CAAC,CAAC;AACrE;AAACsC,EAAA,GAhDuBxC,WAAW;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}